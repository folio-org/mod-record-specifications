{
  "id": "@artifactId@-@version@",
  "name": "Record Specifications",
  "provides": [
    {
      "id": "specification-storage",
      "version": "1.0",
      "handlers": [
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/specification-storage/specifications",
          "permissionsRequired": [
            "specification-storage.specifications.collection.get"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/specification-storage/specifications/{specificationId}/sync",
          "permissionsRequired": [
            "specification-storage.specification.item.sync"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/specification-storage/specifications/{specificationId}/rules",
          "permissionsRequired": [
            "specification-storage.specification.rules.collection.get"
          ]
        },
        {
          "methods": [
            "PATCH"
          ],
          "pathPattern": "/specification-storage/specifications/{specificationId}/rules/{ruleId}",
          "permissionsRequired": [
            "specification-storage.specification.rules.item.patch"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/specification-storage/specifications/{specificationId}/fields",
          "permissionsRequired": [
            "specification-storage.specification.fields.collection.get"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/specification-storage/specifications/{specificationId}/fields",
          "permissionsRequired": [
            "specification-storage.specification.fields.item.post"
          ]
        },
        {
          "methods": [
            "PUT"
          ],
          "pathPattern": "/specification-storage/fields/{id}",
          "permissionsRequired": [
            "specification-storage.fields.item.put"
          ]
        },
        {
          "methods": [
            "DELETE"
          ],
          "pathPattern": "/specification-storage/fields/{id}",
          "permissionsRequired": [
            "specification-storage.fields.item.delete"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/specification-storage/fields/{fieldId}/subfields",
          "permissionsRequired": [
            "specification-storage.field.subfields.collection.get"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/specification-storage/fields/{fieldId}/subfields",
          "permissionsRequired": [
            "specification-storage.field.subfields.item.post"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/specification-storage/fields/{fieldId}/indicators",
          "permissionsRequired": [
            "specification-storage.field.indicators.collection.get"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/specification-storage/fields/{fieldId}/indicators",
          "permissionsRequired": [
            "specification-storage.field.indicators.item.post"
          ]
        },
        {
          "methods": [
            "PUT"
          ],
          "pathPattern": "/specification-storage/indicators/{indicatorId}",
          "permissionsRequired": [
            "specification-storage.indicators.item.put"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/specification-storage/indicators/{indicatorId}/indicator-codes",
          "permissionsRequired": [
            "specification-storage.indicator.indicator-codes.collection.get"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/specification-storage/indicators/{indicatorId}/indicator-codes",
          "permissionsRequired": [
            "specification-storage.indicator.indicator-codes.item.post"
          ]
        },
        {
          "methods": [
            "PUT"
          ],
          "pathPattern": "/specification-storage/indicator-codes/{indicatorCodeId}",
          "permissionsRequired": [
            "specification-storage.indicator-codes.item.put"
          ]
        },
        {
          "methods": [
            "DELETE"
          ],
          "pathPattern": "/specification-storage/indicator-codes/{indicatorCodeId}",
          "permissionsRequired": [
            "specification-storage.indicator-codes.item.delete"
          ]
        }
      ]
    },
    {
      "id": "_tenant",
      "version": "2.0",
      "interfaceType": "system",
      "handlers": [
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/_/tenant"
        },
        {
          "methods": [
            "GET",
            "DELETE"
          ],
          "pathPattern": "/_/tenant/{id}"
        }
      ]
    }
  ],
  "permissionSets": [
    {
      "permissionName": "specification-storage.specifications.collection.get",
      "displayName": "Specification Storage - Get specification collection",
      "description": "Get specification collection"
    },
    {
      "permissionName": "specification-storage.specification.item.sync",
      "displayName": "Specification Storage - Sync specification",
      "description": "Sync specification"
    },
    {
      "permissionName": "specification-storage.specification.rules.collection.get",
      "displayName": "Specification Storage - Get specification rules collection",
      "description": "Get specification rules collection"
    },
    {
      "permissionName": "specification-storage.specification.rules.item.patch",
      "displayName": "Specification Storage - Toggle rule for specification",
      "description": "Toggle rule for specification"
    },
    {
      "permissionName": "specification-storage.specification.fields.collection.get",
      "displayName": "Specification Storage - Get specification field definition collection",
      "description": "Get specification fields collection"
    },
    {
      "permissionName": "specification-storage.specification.fields.item.post",
      "displayName": "Specification Storage - Create field definition for specification",
      "description": "Create specification field definition"
    },
    {
      "permissionName": "specification-storage.fields.item.put",
      "displayName": "Specification Storage - Update field definition",
      "description": "Update field definition"
    },
    {
      "permissionName": "specification-storage.fields.item.delete",
      "displayName": "Specification Storage - Delete field definition",
      "description": "Delete field definition"
    },
    {
      "permissionName": "specification-storage.field.subfields.collection.get",
      "displayName": "Specification Storage - Get field subfields definition collection",
      "description": "Get field subfields collection"
    },
    {
      "permissionName": "specification-storage.field.subfields.item.post",
      "displayName": "Specification Storage - Create subfield definition for field",
      "description": "Create field subfield definition"
    },
    {
      "permissionName": "specification-storage.field.indicators.collection.get",
      "displayName": "Specification Storage - Get field indicators definition collection",
      "description": "Get field indicators collection"
    },
    {
      "permissionName": "specification-storage.field.indicators.item.post",
      "displayName": "Specification Storage - Create indicator definition for field",
      "description": "Create field indicator definition"
    },
    {
      "permissionName": "specification-storage.indicators.item.put",
      "displayName": "Specification Storage - Update indicator definition",
      "description": "Update indicator definition"
    },
    {
      "permissionName": "specification-storage.indicator.indicator-codes.collection.get",
      "displayName": "Specification Storage - Get indicator code definition collection",
      "description": "Get indicator codes collection"
    },
    {
      "permissionName": "specification-storage.indicator.indicator-codes.item.post",
      "displayName": "Specification Storage - Create code definition for indicator",
      "description": "Create indicator code definition"
    },
    {
      "permissionName": "specification-storage.indicator-codes.item.put",
      "displayName": "Specification Storage - Update indicator code definition",
      "description": "Update indicator code definition"
    },
    {
      "permissionName": "specification-storage.indicator-codes.item.delete",
      "displayName": "Specification Storage - Delete indicator code definition",
      "description": "Delete indicator code definition"
    },
    {
      "permissionName": "specification-storage.all",
      "displayName": "Specification Storage - All permissions",
      "description": "Entire set of permissions needed to manage specifications",
      "subPermissions": [
        "specification-storage.specifications.collection.get",
        "specification-storage.specification.rules.collection.get",
        "specification-storage.specification.rules.item.patch",
        "specification-storage.specification.fields.collection.get",
        "specification-storage.specification.fields.item.post",
        "specification-storage.fields.item.put",
        "specification-storage.fields.item.delete",
        "specification-storage.field.subfields.collection.get",
        "specification-storage.field.subfields.item.post",
        "specification-storage.field.indicators.collection.get",
        "specification-storage.field.indicators.item.post",
        "specification-storage.indicators.item.put",
        "specification-storage.indicator.indicator-codes.collection.get",
        "specification-storage.indicator.indicator-codes.item.post"
      ]
    }
  ],
  "launchDescriptor": {
    "dockerImage": "@artifactId@:@version@",
    "dockerPull": false,
    "dockerArgs": {
      "HostConfig": {
        "Memory": 542293850,
        "PortBindings": {
          "8081/tcp": [
            {
              "HostPort": "%p"
            }
          ]
        }
      }
    },
    "env": [
      {
        "name": "JAVA_OPTIONS",
        "value": "-XX:MaxRAMPercentage=85.0"
      },
      {
        "name": "DB_HOST",
        "value": "localhost",
        "description": "Postgres hostname"
      },
      {
        "name": "DB_PORT",
        "value": "5432",
        "description": "Postgres port"
      },
      {
        "name": "DB_USERNAME",
        "value": "folio_admin",
        "description": "Postgres username"
      },
      {
        "name": "DB_PASSWORD",
        "value": "folio_admin",
        "description": "Postgres username password"
      },
      {
        "name": "DB_DATABASE",
        "value": "okapi_modules",
        "description": "Postgres database name"
      },
      {
        "name": "DB_MAXPOOLSIZE",
        "value": "10",
        "description": "This property controls the maximum size that the pool is allowed to reach, including both idle and in-use connections"
      },
      {
        "name": "DB_MINIMUM_IDLE",
        "value": "10",
        "description": "This property controls the minimum number of idle connections that HikariCP tries to maintain in the pool"
      },
      {
        "name": "DB_CONNECTION_TIMEOUT",
        "value": "30000",
        "description": "This property controls the maximum number of milliseconds that a client will wait for a connection from the pool"
      },
      {
        "name": "DB_IDLE_TIMEOUT",
        "value": "600000",
        "description": "This property controls the maximum amount of time that a connection is allowed to sit idle in the pool. This setting only applies when `DB_MINIMUM_IDLE` is defined to be less than `DB_MAXPOOLSIZE`"
      },
      {
        "name": "DB_KEEPALIVE_TIME",
        "value": "0",
        "description": "This property controls how frequently HikariCP will attempt to keep a connection alive, in order to prevent it from being timed out by the database or network infrastructure (0 - disabled)"
      },
      {
        "name": "DB_MAX_LIFETIME",
        "value": "1800000",
        "description": "This property controls the maximum lifetime of a connection in the pool"
      },
      {
        "name": "DB_VALIDATION_TIMEOUT",
        "value": "5000",
        "description": "This property controls the maximum amount of time that a connection will be tested for aliveness. This value must be less than the `DB_CONNECTION_TIMEOUT`"
      },
      {
        "name": "DB_INITIALIZATION_FAIL_TIMEOUT",
        "value": "30000",
        "description": "This property controls whether the pool will \"fail fast\" if the pool cannot be seeded with an initial connection successfully"
      },
      {
        "name": "DB_LEAK_DETECTION_THRESHOLD",
        "value": "30000",
        "description": "This property controls the amount of time that a connection can be out of the pool before a message is logged indicating a possible connection leak (0 - disabled)"
      },
      {
        "name": "KAFKA_HOST",
        "value": "kafka",
        "description": "Kafka broker hostname"
      },
      {
        "name": "KAFKA_PORT",
        "value": "9092",
        "description": "Kafka broker port"
      },
      {
        "name": "KAFKA_SECURITY_PROTOCOL",
        "value": "PLAINTEXT",
        "description": "Kafka security protocol used to communicate with brokers (SSL or PLAINTEXT)"
      },
      {
        "name": "KAFKA_SSL_KEYSTORE_LOCATION",
        "value": "",
        "description": "The location of the Kafka key store file. This is optional for client and can be used for two-way authentication for client."
      },
      {
        "name": "KAFKA_SSL_KEYSTORE_PASSWORD",
        "value": "",
        "description": "The store password for the Kafka key store file. This is optional for client and only needed if 'ssl.keystore.location' is configured."
      },
      {
        "name": "KAFKA_SSL_TRUSTSTORE_LOCATION",
        "value": "",
        "description": "The location of the Kafka trust store file."
      },
      {
        "name": "KAFKA_SSL_TRUSTSTORE_PASSWORD",
        "value": "",
        "description": "The password for the Kafka trust store file. If a password is not set, trust store file configured will still be used, but integrity checking is disabled."
      },
      {
        "name": "KAFKA_SPECIFICATION_UPDATE_TOPIC_PARTITIONS",
        "value": "1",
        "description": "Amount of partitions for `specification-storage.specification.updated` topic."
      },
      {
        "name": "KAFKA_SPECIFICATION_UPDATE_TOPIC_REPLICATION_FACTOR",
        "value": "",
        "description": "Replication factor for `specification-storage.specification.updated` topic."
      }
    ]
  }
}
